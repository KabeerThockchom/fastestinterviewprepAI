{"ast":null,"code":"var _jsxFileName = \"/Users/kabeerthockchom/Downloads/interview/job-interview-helper/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobDescription, setJobDescription] = useState('');\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [resumeText, setResumeText] = useState('');\n//   const [selectedQuestion, setSelectedQuestion] = useState('');\n//   const [questions, setQuestions] = useState([]);\n//   const [answer, setAnswer] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n//   const loadingTextOptions = [\n//     'Generating...',\n//     'Blackmailing the nerds...',\n//     'Interrogating the recruiters...',\n//     'Adding a touch of AI nepotism...',\n//     \"Almost there now, don't be impatient...\",\n//     \"Hey, it's at least faster than you getting a job...\",\n//   ];\n//   const [loadingTextIndex, setLoadingTextIndex] = useState(0);\n\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     if (name === 'jobPosting') {\n//       setJobPosting(files[0]);\n//     } else {\n//       setResume(files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n\n//     const formData = new FormData();\n//     if (jobPosting) {\n//       formData.append('job_posting', jobPosting);\n//     }\n//     if (jobDescription) {\n//       formData.append('job_description', jobDescription);\n//     }\n//     formData.append('resume', resume);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestions(data.questions);\n//       setResumeText(data.resumeText);\n//     } catch (error) {\n//       console.error('Error uploading files:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleQuestionChange = (e) => setSelectedQuestion(e.target.value);\n\n//   const handleGenerateAnswer = async () => {\n//     if (!selectedQuestion || !resumeText) return;\n//     setIsLoading(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/generate-answer', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ question: selectedQuestion, resume: resumeText }),\n//       });\n//       const data = await response.json();\n//       setAnswer(data.answer);\n//     } catch (error) {\n//       console.error('Error generating answer:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header>\n//         <h1>InterviewPrep.AI</h1>\n//         <p>Ace your next interview with AI-powered preparation!</p>\n//       </header>\n//       <main>\n//         <section className=\"upload-section\">\n//           <h2>Upload Your Documents</h2>\n//           <form onSubmit={handleSubmit} className=\"upload-form\">\n//             <div className=\"form-group\">\n//               <label htmlFor=\"jobDescription\">Job Description:</label>\n//               <textarea\n//                 name=\"jobDescription\"\n//                 id=\"jobDescription\"\n//                 value={jobDescription}\n//                 onChange={(e) => setJobDescription(e.target.value)}\n//                 placeholder=\"Enter job description\"\n//                 rows={5}\n//               ></textarea>\n//             </div>\n//             <div className=\"form-group\">\n//   <div className=\"file-upload-wrapper\">\n//     <input type=\"file\" name=\"jobPosting\" id=\"jobPosting\" className=\"file-input\" onChange={handleFileChange} accept=\".pdf\" />\n//     <label htmlFor=\"jobPosting\" className=\"file-upload-label\">\n//       <i className=\"fas fa-cloud-upload-alt\"></i> Upload PDF of Job Description\n//     </label>\n//     {jobPosting && <span className=\"file-name\">{jobPosting.name}</span>}\n//   </div>\n// </div>\n// <div className=\"form-group\">\n//   <div className=\"file-upload-wrapper\">\n//     <input type=\"file\" name=\"resume\" id=\"resume\" className=\"file-input\" onChange={handleFileChange} accept=\".pdf\" />\n//     <label htmlFor=\"resume\" className=\"file-upload-label\">\n//       <i className=\"fas fa-cloud-upload-alt\"></i> Upload PDF of Resume\n//     </label>\n//     {resume && <span className=\"file-name\">{resume.name}</span>}\n//   </div>\n// </div>\n//             <button type=\"submit\" className=\"btn-primary\" disabled={isLoading}>\n//               {isLoading ? (\n//                 <>\n//                   <i className=\"fas fa-spinner fa-spin\"></i> Generating...\n//                 </>\n//               ) : (\n//                 'Generate Questions'\n//               )}\n//             </button>\n//           </form>\n//         </section>\n//         <section className=\"questions-section\">\n//           <h2>Practice Questions</h2>\n//           {questions.length > 0 ? (\n//             <>\n//               <div className=\"question-select-container\">\n//                 <select value={selectedQuestion} onChange={handleQuestionChange} className=\"question-select\">\n//                   <option value=\"\">Select a question</option>\n//                   {questions.map((question, index) => (\n//                     <option key={index} value={question}>\n//                       {question}\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <button onClick={handleGenerateAnswer} className=\"btn-secondary\" disabled={isLoading}>\n//                   {isLoading ? (\n//                     <>\n//                       <i className=\"fas fa-spinner fa-spin\"></i> Generating...\n//                     </>\n//                   ) : (\n//                     'Generate Answer'\n//                   )}\n//                 </button>\n//               </div>\n//               {answer && (\n//                 <div className=\"answer-section\">\n//                   <h3>Sample Answer:</h3>\n//                   <p>{answer}</p>\n//                 </div>\n//               )}\n//             </>\n//           ) : (\n//             <p>No questions generated yet. Upload your documents to get started.</p>\n//           )}\n//         </section>\n//       </main>\n//       <footer>\n//         <p>&copy; 2024 InterviewPrep.AI, created by Kabeer Thockchom. Powered by Groq</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobDescription, setJobDescription] = useState('');\n  const [jobPosting, setJobPosting] = useState(null);\n  const [resume, setResume] = useState(null);\n  const [resumeText, setResumeText] = useState('');\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [answer, setAnswer] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const loadingTextOptions = ['Generating...', 'Blackmailing the nerds...', 'Interrogating the recruiters...', 'Adding a touch of AI nepotism...', \"Almost there now, don't be impatient...\", \"Hey, it's at least faster than you getting a job...\"];\n  const [loadingTextIndex, setLoadingTextIndex] = useState(0);\n  useEffect(() => {\n    let interval;\n    if (isLoading) {\n      interval = setInterval(() => {\n        setLoadingTextIndex(prevIndex => (prevIndex + 1) % loadingTextOptions.length);\n      }, 5000);\n    }\n    return () => clearInterval(interval);\n  }, [isLoading]);\n  const handleFileChange = e => {\n    const {\n      name,\n      files\n    } = e.target;\n    if (name === 'jobPosting') {\n      setJobPosting(files[0]);\n    } else {\n      setResume(files[0]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const formData = new FormData();\n    if (jobPosting) {\n      formData.append('job_posting', jobPosting);\n    }\n    if (jobDescription) {\n      formData.append('job_description', jobDescription);\n    }\n    formData.append('resume', resume);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setQuestions(data.questions);\n      setResumeText(data.resumeText);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleQuestionChange = e => setSelectedQuestion(e.target.value);\n  const handleGenerateAnswer = async () => {\n    if (!selectedQuestion || !resumeText) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/generate-answer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: selectedQuestion,\n          resume: resumeText\n        })\n      });\n      const data = await response.json();\n      setAnswer(data.answer);\n    } catch (error) {\n      console.error('Error generating answer:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"InterviewPrep.AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ace your next interview with AI-powered preparation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload Your Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"upload-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"jobDescription\",\n              children: \"Job Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"jobDescription\",\n              id: \"jobDescription\",\n              value: jobDescription,\n              onChange: e => setJobDescription(e.target.value),\n              placeholder: \"Enter job description\",\n              rows: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"jobPosting\",\n                id: \"jobPosting\",\n                className: \"file-input\",\n                onChange: handleFileChange,\n                accept: \".pdf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"jobPosting\",\n                className: \"file-upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-cloud-upload-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), \" Upload PDF of Job Description\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), jobPosting && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-name\",\n                children: jobPosting.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"resume\",\n                id: \"resume\",\n                className: \"file-input\",\n                onChange: handleFileChange,\n                accept: \".pdf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"resume\",\n                className: \"file-upload-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-cloud-upload-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this), \" Upload PDF of Resume\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), resume && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-name\",\n                children: resume.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-primary\",\n            disabled: isLoading,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-spinner fa-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this), \" \", loadingTextOptions[loadingTextIndex]]\n            }, void 0, true) : 'Generate Questions'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"questions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Practice Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), questions.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-select-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedQuestion,\n              onChange: handleQuestionChange,\n              className: \"question-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: question,\n                children: question\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleGenerateAnswer,\n              className: \"btn-secondary\",\n              disabled: isLoading,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-spinner fa-spin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this), \" \", loadingTextOptions[loadingTextIndex]]\n              }, void 0, true) : 'Generate Answer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Sample Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No questions generated yet. Upload your documents to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 InterviewPrep.AI, created by Kabeer Thockchom. Powered by Groq\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s5rlkLFcgGq4NFyzfRiYrxZYBQE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","jobDescription","setJobDescription","jobPosting","setJobPosting","resume","setResume","resumeText","setResumeText","selectedQuestion","setSelectedQuestion","questions","setQuestions","answer","setAnswer","isLoading","setIsLoading","loadingTextOptions","loadingTextIndex","setLoadingTextIndex","interval","setInterval","prevIndex","length","clearInterval","handleFileChange","e","name","files","target","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","error","console","handleQuestionChange","value","handleGenerateAnswer","headers","JSON","stringify","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","placeholder","rows","type","accept","disabled","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/kabeerthockchom/Downloads/interview/job-interview-helper/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobDescription, setJobDescription] = useState('');\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [resumeText, setResumeText] = useState('');\n//   const [selectedQuestion, setSelectedQuestion] = useState('');\n//   const [questions, setQuestions] = useState([]);\n//   const [answer, setAnswer] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n//   const loadingTextOptions = [\n//     'Generating...',\n//     'Blackmailing the nerds...',\n//     'Interrogating the recruiters...',\n//     'Adding a touch of AI nepotism...',\n//     \"Almost there now, don't be impatient...\",\n//     \"Hey, it's at least faster than you getting a job...\",\n//   ];\n//   const [loadingTextIndex, setLoadingTextIndex] = useState(0);\n\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     if (name === 'jobPosting') {\n//       setJobPosting(files[0]);\n//     } else {\n//       setResume(files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n\n//     const formData = new FormData();\n//     if (jobPosting) {\n//       formData.append('job_posting', jobPosting);\n//     }\n//     if (jobDescription) {\n//       formData.append('job_description', jobDescription);\n//     }\n//     formData.append('resume', resume);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestions(data.questions);\n//       setResumeText(data.resumeText);\n//     } catch (error) {\n//       console.error('Error uploading files:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleQuestionChange = (e) => setSelectedQuestion(e.target.value);\n\n//   const handleGenerateAnswer = async () => {\n//     if (!selectedQuestion || !resumeText) return;\n//     setIsLoading(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/generate-answer', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ question: selectedQuestion, resume: resumeText }),\n//       });\n//       const data = await response.json();\n//       setAnswer(data.answer);\n//     } catch (error) {\n//       console.error('Error generating answer:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header>\n//         <h1>InterviewPrep.AI</h1>\n//         <p>Ace your next interview with AI-powered preparation!</p>\n//       </header>\n//       <main>\n//         <section className=\"upload-section\">\n//           <h2>Upload Your Documents</h2>\n//           <form onSubmit={handleSubmit} className=\"upload-form\">\n//             <div className=\"form-group\">\n//               <label htmlFor=\"jobDescription\">Job Description:</label>\n//               <textarea\n//                 name=\"jobDescription\"\n//                 id=\"jobDescription\"\n//                 value={jobDescription}\n//                 onChange={(e) => setJobDescription(e.target.value)}\n//                 placeholder=\"Enter job description\"\n//                 rows={5}\n//               ></textarea>\n//             </div>\n//             <div className=\"form-group\">\n//   <div className=\"file-upload-wrapper\">\n//     <input type=\"file\" name=\"jobPosting\" id=\"jobPosting\" className=\"file-input\" onChange={handleFileChange} accept=\".pdf\" />\n//     <label htmlFor=\"jobPosting\" className=\"file-upload-label\">\n//       <i className=\"fas fa-cloud-upload-alt\"></i> Upload PDF of Job Description\n//     </label>\n//     {jobPosting && <span className=\"file-name\">{jobPosting.name}</span>}\n//   </div>\n// </div>\n// <div className=\"form-group\">\n//   <div className=\"file-upload-wrapper\">\n//     <input type=\"file\" name=\"resume\" id=\"resume\" className=\"file-input\" onChange={handleFileChange} accept=\".pdf\" />\n//     <label htmlFor=\"resume\" className=\"file-upload-label\">\n//       <i className=\"fas fa-cloud-upload-alt\"></i> Upload PDF of Resume\n//     </label>\n//     {resume && <span className=\"file-name\">{resume.name}</span>}\n//   </div>\n// </div>\n//             <button type=\"submit\" className=\"btn-primary\" disabled={isLoading}>\n//               {isLoading ? (\n//                 <>\n//                   <i className=\"fas fa-spinner fa-spin\"></i> Generating...\n//                 </>\n//               ) : (\n//                 'Generate Questions'\n//               )}\n//             </button>\n//           </form>\n//         </section>\n//         <section className=\"questions-section\">\n//           <h2>Practice Questions</h2>\n//           {questions.length > 0 ? (\n//             <>\n//               <div className=\"question-select-container\">\n//                 <select value={selectedQuestion} onChange={handleQuestionChange} className=\"question-select\">\n//                   <option value=\"\">Select a question</option>\n//                   {questions.map((question, index) => (\n//                     <option key={index} value={question}>\n//                       {question}\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <button onClick={handleGenerateAnswer} className=\"btn-secondary\" disabled={isLoading}>\n//                   {isLoading ? (\n//                     <>\n//                       <i className=\"fas fa-spinner fa-spin\"></i> Generating...\n//                     </>\n//                   ) : (\n//                     'Generate Answer'\n//                   )}\n//                 </button>\n//               </div>\n//               {answer && (\n//                 <div className=\"answer-section\">\n//                   <h3>Sample Answer:</h3>\n//                   <p>{answer}</p>\n//                 </div>\n//               )}\n//             </>\n//           ) : (\n//             <p>No questions generated yet. Upload your documents to get started.</p>\n//           )}\n//         </section>\n//       </main>\n//       <footer>\n//         <p>&copy; 2024 InterviewPrep.AI, created by Kabeer Thockchom. Powered by Groq</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [jobDescription, setJobDescription] = useState('');\n  const [jobPosting, setJobPosting] = useState(null);\n  const [resume, setResume] = useState(null);\n  const [resumeText, setResumeText] = useState('');\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [answer, setAnswer] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const loadingTextOptions = [\n    'Generating...',\n    'Blackmailing the nerds...',\n    'Interrogating the recruiters...',\n    'Adding a touch of AI nepotism...',\n    \"Almost there now, don't be impatient...\",\n    \"Hey, it's at least faster than you getting a job...\",\n  ];\n  const [loadingTextIndex, setLoadingTextIndex] = useState(0);\n\n  useEffect(() => {\n    let interval;\n    if (isLoading) {\n      interval = setInterval(() => {\n        setLoadingTextIndex((prevIndex) => (prevIndex + 1) % loadingTextOptions.length);\n      }, 5000);\n    }\n    return () => clearInterval(interval);\n  }, [isLoading]);\n\n  const handleFileChange = (e) => {\n    const { name, files } = e.target;\n    if (name === 'jobPosting') {\n      setJobPosting(files[0]);\n    } else {\n      setResume(files[0]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    const formData = new FormData();\n    if (jobPosting) {\n      formData.append('job_posting', jobPosting);\n    }\n    if (jobDescription) {\n      formData.append('job_description', jobDescription);\n    }\n    formData.append('resume', resume);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      setQuestions(data.questions);\n      setResumeText(data.resumeText);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuestionChange = (e) => setSelectedQuestion(e.target.value);\n\n  const handleGenerateAnswer = async () => {\n    if (!selectedQuestion || !resumeText) return;\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/generate-answer', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ question: selectedQuestion, resume: resumeText }),\n      });\n      const data = await response.json();\n      setAnswer(data.answer);\n    } catch (error) {\n      console.error('Error generating answer:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>InterviewPrep.AI</h1>\n        <p>Ace your next interview with AI-powered preparation!</p>\n      </header>\n      <main>\n        <section className=\"upload-section\">\n          <h2>Upload Your Documents</h2>\n          <form onSubmit={handleSubmit} className=\"upload-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"jobDescription\">Job Description:</label>\n              <textarea\n                name=\"jobDescription\"\n                id=\"jobDescription\"\n                value={jobDescription}\n                onChange={(e) => setJobDescription(e.target.value)}\n                placeholder=\"Enter job description\"\n                rows={5}\n              ></textarea>\n            </div>\n            <div className=\"form-group\">\n              <div className=\"file-upload-wrapper\">\n                <input type=\"file\" name=\"jobPosting\" id=\"jobPosting\" className=\"file-input\" onChange={handleFileChange} accept=\".pdf\" />\n                <label htmlFor=\"jobPosting\" className=\"file-upload-label\">\n                  <i className=\"fas fa-cloud-upload-alt\"></i> Upload PDF of Job Description\n                </label>\n                {jobPosting && <span className=\"file-name\">{jobPosting.name}</span>}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <div className=\"file-upload-wrapper\">\n                <input type=\"file\" name=\"resume\" id=\"resume\" className=\"file-input\" onChange={handleFileChange} accept=\".pdf\" />\n                <label htmlFor=\"resume\" className=\"file-upload-label\">\n                  <i className=\"fas fa-cloud-upload-alt\"></i> Upload PDF of Resume\n                </label>\n                {resume && <span className=\"file-name\">{resume.name}</span>}\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn-primary\" disabled={isLoading}>\n              {isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> {loadingTextOptions[loadingTextIndex]}\n                </>\n              ) : (\n                'Generate Questions'\n              )}\n            </button>\n          </form>\n        </section>\n        <section className=\"questions-section\">\n          <h2>Practice Questions</h2>\n          {questions.length > 0 ? (\n            <>\n              <div className=\"question-select-container\">\n                <select value={selectedQuestion} onChange={handleQuestionChange} className=\"question-select\">\n                  <option value=\"\">Select a question</option>\n                  {questions.map((question, index) => (\n                    <option key={index} value={question}>\n                      {question}\n                    </option>\n                  ))}\n                </select>\n                <button onClick={handleGenerateAnswer} className=\"btn-secondary\" disabled={isLoading}>\n                  {isLoading ? (\n                    <>\n                      <i className=\"fas fa-spinner fa-spin\"></i> {loadingTextOptions[loadingTextIndex]}\n                    </>\n                  ) : (\n                    'Generate Answer'\n                  )}\n                </button>\n              </div>\n              {answer && (\n                <div className=\"answer-section\">\n                  <h3>Sample Answer:</h3>\n                  <p>{answer}</p>\n                </div>\n              )}\n            </>\n          ) : (\n            <p>No questions generated yet. Upload your documents to get started.</p>\n          )}\n        </section>\n      </main>\n      <footer>\n        <p>&copy; 2024 InterviewPrep.AI, created by Kabeer Thockchom. Powered by Groq</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACc,UAAU,EAAEC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}