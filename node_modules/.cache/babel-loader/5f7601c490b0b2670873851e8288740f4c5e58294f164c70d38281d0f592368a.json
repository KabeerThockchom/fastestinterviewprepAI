{"ast":null,"code":"var _jsxFileName = \"/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobPostingUrl, setJobPostingUrl] = useState('');\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [resumeText, setResumeText] = useState('');\n//   const [selectedQuestion, setSelectedQuestion] = useState('');\n//   const [questions, setQuestions] = useState([]);\n//   const [answer, setAnswer] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleFileChange = (e) => {\n//     const { name, files, value } = e.target;\n//     if (name === 'jobPosting') {\n//       setJobPosting(files[0]);\n//     } else if (name === 'jobPostingUrl') {\n//       setJobPostingUrl(value);\n//     } else {\n//       setResume(files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n\n//     const formData = new FormData();\n//     if (jobPosting) {\n//       formData.append('job_posting', jobPosting);\n//     } else if (jobPostingUrl) {\n//       formData.append('job_posting_url', jobPostingUrl);\n//     }\n//     formData.append('resume', resume);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestions(data.questions);\n//       setResumeText(data.resumeText);\n//     } catch (error) {\n//       console.error('Error uploading files:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleQuestionChange = (e) => setSelectedQuestion(e.target.value);\n\n//   const handleGenerateAnswer = async () => {\n//     if (!selectedQuestion || !resumeText) return;\n//     setIsLoading(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/generate-answer', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ question: selectedQuestion, resume: resumeText }),\n//       });\n//       const data = await response.json();\n//       setAnswer(data.answer);\n//     } catch (error) {\n//       console.error('Error generating answer:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header>\n//         <h1>Fastest 100 Question Interview Prep in the World!</h1>\n//       </header>\n//       <main>\n//         <div className=\"content-container\">\n//         <div className=\"upload-section\">\n//   <h2>Get Started by Uploading:</h2>\n//   <form onSubmit={handleSubmit} className=\"upload-form\">\n//     <div className=\"file-input\">\n//       <label htmlFor=\"jobPostingUrl\">Google Jobs Link:</label>\n//       <input\n//         type=\"text\"\n//         name=\"jobPostingUrl\"\n//         id=\"jobPostingUrl\"\n//         value={jobPostingUrl}\n//         onChange={handleFileChange}\n//         placeholder=\"Enter Google Jobs URL\"\n//       />\n//     </div>\n//     <div className=\"file-input\">\n//       <label htmlFor=\"jobPosting\" className=\"custom-file-upload\">\n//         <i className=\"fas fa-file-pdf\"></i> Upload Job Posting PDF\n//       </label>\n//       <input type=\"file\" name=\"jobPosting\" id=\"jobPosting\" onChange={handleFileChange} accept=\".pdf\" />\n//       {jobPosting && <p>Uploaded: {jobPosting.name}</p>}\n//     </div>\n//     <div className=\"file-input\">\n//       <label htmlFor=\"resume\" className=\"custom-file-upload\">\n//         <i className=\"fas fa-file-pdf\"></i> Upload Resume PDF\n//       </label>\n//       <input type=\"file\" name=\"resume\" id=\"resume\" onChange={handleFileChange} accept=\".pdf\" />\n//       {resume && <p>Uploaded: {resume.name}</p>}\n//     </div>\n//     <button type=\"submit\" className=\"submit-btn\" disabled={isLoading}>\n//       {isLoading ? <div className=\"loading-icon\"></div> : 'Generate Questions'}\n//     </button>\n//   </form>\n// </div>\n//           <div className=\"questions-answer-container\">\n//             {questions.length > 0 && (\n//               <div className=\"questions-section\">\n//                 <h2>Choose a Question to Practice</h2>\n//                 <select value={selectedQuestion} onChange={handleQuestionChange} className=\"question-select\">\n//                   <option value=\"\">Select a Question</option>\n//                   {questions.map((question, index) => (\n//                     <option key={index} value={question}>\n//                       {question}\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <button onClick={handleGenerateAnswer} className=\"generate-btn\" disabled={isLoading}>\n//                   {isLoading ? <div className=\"loading-icon\"></div> : 'Generate Answer'}\n//                 </button>\n//               </div>\n//             )}\n//             {answer && (\n//               <div className=\"answer-section\">\n//                 <h2>Your Sample Answer</h2>\n//                 <p>{answer}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </main>\n//       <footer>\n//   <p>\n//     Powered by Groq:{' '}\n//     <a href=\"https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1\" target=\"_blank\" rel=\"noopener noreferrer\">\n//       Mixtral-8x7b-Instruct-v0.1\n//     </a>\n//   </p>\n// </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobPostingUrl, setJobPostingUrl] = useState('');\n  const [jobPosting, setJobPosting] = useState(null);\n  const [resume, setResume] = useState(null);\n  const [resumeText, setResumeText] = useState('');\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [answer, setAnswer] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleFileChange = e => {\n    const {\n      name,\n      files,\n      value\n    } = e.target;\n    if (name === 'jobPosting') {\n      setJobPosting(files[0]);\n    } else if (name === 'jobPostingUrl') {\n      setJobPostingUrl(value);\n    } else {\n      setResume(files[0]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const formData = new FormData();\n    if (jobPosting) {\n      formData.append('job_posting', jobPosting);\n    } else if (jobPostingUrl) {\n      formData.append('job_posting_url', jobPostingUrl);\n    }\n    formData.append('resume', resume);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setQuestions(data.questions);\n      setResumeText(data.resumeText);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleQuestionChange = e => setSelectedQuestion(e.target.value);\n  const handleGenerateAnswer = async () => {\n    if (!selectedQuestion || !resumeText) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/generate-answer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: selectedQuestion,\n          resume: resumeText\n        })\n      });\n      const data = await response.json();\n      setAnswer(data.answer);\n    } catch (error) {\n      console.error('Error generating answer:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Fastest 100 Question Interview Prep in the World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Get Started by Uploading:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"upload-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"jobPostingUrl\",\n                children: \"Google Jobs Link:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"jobPostingUrl\",\n                id: \"jobPostingUrl\",\n                value: jobPostingUrl,\n                onChange: handleFileChange,\n                placeholder: \"Enter Google Jobs URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"jobPosting\",\n                className: \"custom-file-upload\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-file-pdf\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this), \" Upload Job Posting PDF\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"jobPosting\",\n                id: \"jobPosting\",\n                onChange: handleFileChange,\n                accept: \".pdf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), jobPosting && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Uploaded: \", jobPosting.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"resume\",\n                className: \"custom-file-upload\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-file-pdf\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), \" Upload Resume PDF\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"resume\",\n                id: \"resume\",\n                onChange: handleFileChange,\n                accept: \".pdf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), resume && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Uploaded: \", resume.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-btn\",\n              disabled: isLoading,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 30\n              }, this) : 'Generate Questions'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-answer-container\",\n          children: [questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questions-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Choose a Question to Practice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedQuestion,\n              onChange: handleQuestionChange,\n              className: \"question-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: question,\n                children: question\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleGenerateAnswer,\n              className: \"generate-btn\",\n              disabled: isLoading,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 32\n              }, this) : 'Generate Answer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Your Sample Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Powered by Groq:\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Mixtral-8x7b-Instruct-v0.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VAWIsKwlTIEzldurqAxWN1vk8/0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","jobPostingUrl","setJobPostingUrl","jobPosting","setJobPosting","resume","setResume","resumeText","setResumeText","selectedQuestion","setSelectedQuestion","questions","setQuestions","answer","setAnswer","isLoading","setIsLoading","handleFileChange","e","name","files","value","target","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","error","console","handleQuestionChange","handleGenerateAnswer","headers","JSON","stringify","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","accept","disabled","length","map","index","onClick","href","rel","_c","$RefreshReg$"],"sources":["/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobPostingUrl, setJobPostingUrl] = useState('');\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [resumeText, setResumeText] = useState('');\n//   const [selectedQuestion, setSelectedQuestion] = useState('');\n//   const [questions, setQuestions] = useState([]);\n//   const [answer, setAnswer] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleFileChange = (e) => {\n//     const { name, files, value } = e.target;\n//     if (name === 'jobPosting') {\n//       setJobPosting(files[0]);\n//     } else if (name === 'jobPostingUrl') {\n//       setJobPostingUrl(value);\n//     } else {\n//       setResume(files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n  \n//     const formData = new FormData();\n//     if (jobPosting) {\n//       formData.append('job_posting', jobPosting);\n//     } else if (jobPostingUrl) {\n//       formData.append('job_posting_url', jobPostingUrl);\n//     }\n//     formData.append('resume', resume);\n  \n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestions(data.questions);\n//       setResumeText(data.resumeText);\n//     } catch (error) {\n//       console.error('Error uploading files:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleQuestionChange = (e) => setSelectedQuestion(e.target.value);\n\n//   const handleGenerateAnswer = async () => {\n//     if (!selectedQuestion || !resumeText) return;\n//     setIsLoading(true);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/generate-answer', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ question: selectedQuestion, resume: resumeText }),\n//       });\n//       const data = await response.json();\n//       setAnswer(data.answer);\n//     } catch (error) {\n//       console.error('Error generating answer:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header>\n//         <h1>Fastest 100 Question Interview Prep in the World!</h1>\n//       </header>\n//       <main>\n//         <div className=\"content-container\">\n//         <div className=\"upload-section\">\n//   <h2>Get Started by Uploading:</h2>\n//   <form onSubmit={handleSubmit} className=\"upload-form\">\n//     <div className=\"file-input\">\n//       <label htmlFor=\"jobPostingUrl\">Google Jobs Link:</label>\n//       <input\n//         type=\"text\"\n//         name=\"jobPostingUrl\"\n//         id=\"jobPostingUrl\"\n//         value={jobPostingUrl}\n//         onChange={handleFileChange}\n//         placeholder=\"Enter Google Jobs URL\"\n//       />\n//     </div>\n//     <div className=\"file-input\">\n//       <label htmlFor=\"jobPosting\" className=\"custom-file-upload\">\n//         <i className=\"fas fa-file-pdf\"></i> Upload Job Posting PDF\n//       </label>\n//       <input type=\"file\" name=\"jobPosting\" id=\"jobPosting\" onChange={handleFileChange} accept=\".pdf\" />\n//       {jobPosting && <p>Uploaded: {jobPosting.name}</p>}\n//     </div>\n//     <div className=\"file-input\">\n//       <label htmlFor=\"resume\" className=\"custom-file-upload\">\n//         <i className=\"fas fa-file-pdf\"></i> Upload Resume PDF\n//       </label>\n//       <input type=\"file\" name=\"resume\" id=\"resume\" onChange={handleFileChange} accept=\".pdf\" />\n//       {resume && <p>Uploaded: {resume.name}</p>}\n//     </div>\n//     <button type=\"submit\" className=\"submit-btn\" disabled={isLoading}>\n//       {isLoading ? <div className=\"loading-icon\"></div> : 'Generate Questions'}\n//     </button>\n//   </form>\n// </div>\n//           <div className=\"questions-answer-container\">\n//             {questions.length > 0 && (\n//               <div className=\"questions-section\">\n//                 <h2>Choose a Question to Practice</h2>\n//                 <select value={selectedQuestion} onChange={handleQuestionChange} className=\"question-select\">\n//                   <option value=\"\">Select a Question</option>\n//                   {questions.map((question, index) => (\n//                     <option key={index} value={question}>\n//                       {question}\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <button onClick={handleGenerateAnswer} className=\"generate-btn\" disabled={isLoading}>\n//                   {isLoading ? <div className=\"loading-icon\"></div> : 'Generate Answer'}\n//                 </button>\n//               </div>\n//             )}\n//             {answer && (\n//               <div className=\"answer-section\">\n//                 <h2>Your Sample Answer</h2>\n//                 <p>{answer}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </main>\n//       <footer>\n//   <p>\n//     Powered by Groq:{' '}\n//     <a href=\"https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1\" target=\"_blank\" rel=\"noopener noreferrer\">\n//       Mixtral-8x7b-Instruct-v0.1\n//     </a>\n//   </p>\n// </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [jobPostingUrl, setJobPostingUrl] = useState('');\n  const [jobPosting, setJobPosting] = useState(null);\n  const [resume, setResume] = useState(null);\n  const [resumeText, setResumeText] = useState('');\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [answer, setAnswer] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleFileChange = (e) => {\n    const { name, files, value } = e.target;\n    if (name === 'jobPosting') {\n      setJobPosting(files[0]);\n    } else if (name === 'jobPostingUrl') {\n      setJobPostingUrl(value);\n    } else {\n      setResume(files[0]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    const formData = new FormData();\n    if (jobPosting) {\n      formData.append('job_posting', jobPosting);\n    } else if (jobPostingUrl) {\n      formData.append('job_posting_url', jobPostingUrl);\n    }\n    formData.append('resume', resume);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      setQuestions(data.questions);\n      setResumeText(data.resumeText);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuestionChange = (e) => setSelectedQuestion(e.target.value);\n\n  const handleGenerateAnswer = async () => {\n    if (!selectedQuestion || !resumeText) return;\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/generate-answer', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ question: selectedQuestion, resume: resumeText }),\n      });\n      const data = await response.json();\n      setAnswer(data.answer);\n    } catch (error) {\n      console.error('Error generating answer:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Fastest 100 Question Interview Prep in the World!</h1>\n      </header>\n      <main>\n        <div className=\"content-container\">\n          <div className=\"upload-section\">\n            <h2>Get Started by Uploading:</h2>\n            <form onSubmit={handleSubmit} className=\"upload-form\">\n              <div className=\"file-input\">\n                <label htmlFor=\"jobPostingUrl\">Google Jobs Link:</label>\n                <input\n                  type=\"text\"\n                  name=\"jobPostingUrl\"\n                  id=\"jobPostingUrl\"\n                  value={jobPostingUrl}\n                  onChange={handleFileChange}\n                  placeholder=\"Enter Google Jobs URL\"\n                />\n              </div>\n              <div className=\"file-input\">\n                <label htmlFor=\"jobPosting\" className=\"custom-file-upload\">\n                  <i className=\"fas fa-file-pdf\"></i> Upload Job Posting PDF\n                </label>\n                <input type=\"file\" name=\"jobPosting\" id=\"jobPosting\" onChange={handleFileChange} accept=\".pdf\" />\n                {jobPosting && <p>Uploaded: {jobPosting.name}</p>}\n              </div>\n              <div className=\"file-input\">\n                <label htmlFor=\"resume\" className=\"custom-file-upload\">\n                  <i className=\"fas fa-file-pdf\"></i> Upload Resume PDF\n                </label>\n                <input type=\"file\" name=\"resume\" id=\"resume\" onChange={handleFileChange} accept=\".pdf\" />\n                {resume && <p>Uploaded: {resume.name}</p>}\n              </div>\n              <button type=\"submit\" className=\"submit-btn\" disabled={isLoading}>\n                {isLoading ? <div className=\"loading-icon\"></div> : 'Generate Questions'}\n              </button>\n            </form>\n          </div>\n          <div className=\"questions-answer-container\">\n            {questions.length > 0 && (\n              <div className=\"questions-section\">\n                <h2>Choose a Question to Practice</h2>\n                <select value={selectedQuestion} onChange={handleQuestionChange} className=\"question-select\">\n                  <option value=\"\">Select a Question</option>\n                  {questions.map((question, index) => (\n                    <option key={index} value={question}>\n                      {question}\n                    </option>\n                  ))}\n                </select>\n                <button onClick={handleGenerateAnswer} className=\"generate-btn\" disabled={isLoading}>\n                  {isLoading ? <div className=\"loading-icon\"></div> : 'Generate Answer'}\n                </button>\n              </div>\n            )}\n            {answer && (\n              <div className=\"answer-section\">\n                <h2>Your Sample Answer</h2>\n                <p>{answer}</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n      <footer>\n        <p>\n          Powered by Groq:{' '}\n          <a href=\"https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Mixtral-8x7b-Instruct-v0.1\n          </a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}