{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const JobInterviewHelper = () => {\n//   const [jobPostingFile, setJobPostingFile] = useState(null);\n//   const [resumeFile, setResumeFile] = useState(null);\n//   const [interviewQuestions, setInterviewQuestions] = useState([]);\n//   const [generatingAnswers, setGeneratingAnswers] = useState(false);\n//   const [answers, setAnswers] = useState([]);\n\n//   const handleJobPostingUpload = (event) => {\n//     setJobPostingFile(event.target.files[0]);\n//   };\n\n//   const handleResumeUpload = (event) => {\n//     setResumeFile(event.target.files[0]);\n//   };\n\n//   const handleGenerateQuestions = async () => {\n//     if (jobPostingFile) {\n//       const formData = new FormData();\n//       formData.append('jobPosting', jobPostingFile);\n\n//       try {\n//         const response = await axios.post('/api/generate-questions', formData);\n//         setInterviewQuestions(response.data.questions);\n//       } catch (error) {\n//         console.error('Error generating interview questions:', error);\n//       }\n//     }\n//   };\n\n//   const handleGenerateAnswers = async () => {\n//     if (resumeFile) {\n//       setGeneratingAnswers(true);\n//       const formData = new FormData();\n//       formData.append('resume', resumeFile);\n//       formData.append('questions', JSON.stringify(interviewQuestions));\n\n//       try {\n//         const response = await axios.post('/api/generate-answers', formData);\n//         setAnswers(response.data.answers);\n//       } catch (error) {\n//         console.error('Error generating answers:', error);\n//       }\n//       setGeneratingAnswers(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Job Interview Helper</h1>\n//       <div>\n//         <h2>Upload Job Posting</h2>\n//         <input type=\"file\" accept=\".pdf\" onChange={handleJobPostingUpload} />\n//         <button onClick={handleGenerateQuestions} disabled={!jobPostingFile}>\n//           Generate Interview Questions\n//         </button>\n//       </div>\n//       <div>\n//         <h2>Upload Resume</h2>\n//         <input type=\"file\" accept=\".pdf\" onChange={handleResumeUpload} />\n//         <button onClick={handleGenerateAnswers} disabled={!resumeFile || generatingAnswers}>\n//           Generate Answers\n//         </button>\n//       </div>\n//       <div>\n//         <h2>Generated Interview Questions</h2>\n//         <ul>\n//           {interviewQuestions.map((question, index) => (\n//             <li key={index}>{question}</li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div>\n//         <h2>Generated Answers</h2>\n//         {generatingAnswers ? (\n//           <p>Generating answers...</p>\n//         ) : (\n//           <ul>\n//             {answers.map((answer, index) => (\n//               <li key={index}>\n//                 <p><strong>Question:</strong> {interviewQuestions[index]}</p>\n//                 <p><strong>Answer:</strong> {answer}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default JobInterviewHelper;","map":{"version":3,"names":[],"sources":["/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const JobInterviewHelper = () => {\n//   const [jobPostingFile, setJobPostingFile] = useState(null);\n//   const [resumeFile, setResumeFile] = useState(null);\n//   const [interviewQuestions, setInterviewQuestions] = useState([]);\n//   const [generatingAnswers, setGeneratingAnswers] = useState(false);\n//   const [answers, setAnswers] = useState([]);\n\n//   const handleJobPostingUpload = (event) => {\n//     setJobPostingFile(event.target.files[0]);\n//   };\n\n//   const handleResumeUpload = (event) => {\n//     setResumeFile(event.target.files[0]);\n//   };\n\n//   const handleGenerateQuestions = async () => {\n//     if (jobPostingFile) {\n//       const formData = new FormData();\n//       formData.append('jobPosting', jobPostingFile);\n\n//       try {\n//         const response = await axios.post('/api/generate-questions', formData);\n//         setInterviewQuestions(response.data.questions);\n//       } catch (error) {\n//         console.error('Error generating interview questions:', error);\n//       }\n//     }\n//   };\n\n//   const handleGenerateAnswers = async () => {\n//     if (resumeFile) {\n//       setGeneratingAnswers(true);\n//       const formData = new FormData();\n//       formData.append('resume', resumeFile);\n//       formData.append('questions', JSON.stringify(interviewQuestions));\n\n//       try {\n//         const response = await axios.post('/api/generate-answers', formData);\n//         setAnswers(response.data.answers);\n//       } catch (error) {\n//         console.error('Error generating answers:', error);\n//       }\n//       setGeneratingAnswers(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Job Interview Helper</h1>\n//       <div>\n//         <h2>Upload Job Posting</h2>\n//         <input type=\"file\" accept=\".pdf\" onChange={handleJobPostingUpload} />\n//         <button onClick={handleGenerateQuestions} disabled={!jobPostingFile}>\n//           Generate Interview Questions\n//         </button>\n//       </div>\n//       <div>\n//         <h2>Upload Resume</h2>\n//         <input type=\"file\" accept=\".pdf\" onChange={handleResumeUpload} />\n//         <button onClick={handleGenerateAnswers} disabled={!resumeFile || generatingAnswers}>\n//           Generate Answers\n//         </button>\n//       </div>\n//       <div>\n//         <h2>Generated Interview Questions</h2>\n//         <ul>\n//           {interviewQuestions.map((question, index) => (\n//             <li key={index}>{question}</li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div>\n//         <h2>Generated Answers</h2>\n//         {generatingAnswers ? (\n//           <p>Generating answers...</p>\n//         ) : (\n//           <ul>\n//             {answers.map((answer, index) => (\n//               <li key={index}>\n//                 <p><strong>Question:</strong> {interviewQuestions[index]}</p>\n//                 <p><strong>Answer:</strong> {answer}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default JobInterviewHelper;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}