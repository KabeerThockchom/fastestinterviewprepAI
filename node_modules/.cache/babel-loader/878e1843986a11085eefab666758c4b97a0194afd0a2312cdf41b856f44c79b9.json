{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import './App.css';\n\n// // function App() {\n// //   const [jobPosting, setJobPosting] = useState(null);\n// //   const [resume, setResume] = useState(null);\n// //   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n// //   const handleFileChange = (e) => {\n// //     const { name, files } = e.target;\n// //     if (name === 'jobPosting') {\n// //       setJobPosting(files[0]);\n// //     } else if (name === 'resume') {\n// //       setResume(files[0]);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const formData = new FormData();\n// //     formData.append('job_posting', jobPosting);\n// //     formData.append('resume', resume);\n\n// //     try {\n// //       const response = await fetch('http://127.0.0.1:5000/upload', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n// //       const data = await response.json();\n// //       setQuestionsAndAnswers(data.questionsAndAnswers);\n// //     } catch (error) {\n// //       console.error('Error uploading files:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <h1>Interview Preparation Helper</h1>\n// //       <form onSubmit={handleSubmit}>\n// //         <div>\n// //           <label htmlFor=\"jobPosting\">Upload Job Posting PDF:</label>\n// //           <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} />\n// //         </div>\n// //         <div>\n// //           <label htmlFor=\"resume\">Upload Resume PDF:</label>\n// //           <input type=\"file\" name=\"resume\" onChange={handleFileChange} />\n// //         </div>\n// //         <button type=\"submit\">Generate Questions and Answers</button>\n// //       </form>\n// //       <div className=\"questions-and-answers\">\n// //         {questionsAndAnswers.map((qa, index) => (\n// //           <div key={index} className=\"qa-item\">\n// //             <div className=\"question\">{qa.question}</div>\n// //             <div className=\"answer\">{qa.answer}</div>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// // import React, { useState } from 'react';\n// // import './App.css';\n\n// // function App() {\n// //   const [jobPosting, setJobPosting] = useState(null);\n// //   const [resume, setResume] = useState(null);\n// //   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n// //   const handleFileChange = (e) => {\n// //     const file = e.target.files[0];\n// //     e.target.name === 'jobPosting' ? setJobPosting(file) : setResume(file);\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const formData = new FormData();\n// //     formData.append('job_posting', jobPosting);\n// //     formData.append('resume', resume);\n\n// //     try {\n// //       const response = await fetch('http://127.0.0.1:5000/upload', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n// //       const data = await response.json();\n// //       setQuestionsAndAnswers(data.questionsAndAnswers);\n// //     } catch (error) {\n// //       console.error('Error uploading files:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <header>\n// //         <h1>Interview Preparation Helper</h1>\n// //       </header>\n// //       <main>\n// //         <form onSubmit={handleSubmit} className=\"upload-form\">\n// //           <div className=\"file-input\">\n// //             <label htmlFor=\"jobPosting\">Job Posting PDF:</label>\n// //             <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} accept=\".pdf\"/>\n// //           </div>\n// //           <div className=\"file-input\">\n// //             <label htmlFor=\"resume\">Resume PDF:</label>\n// //             <input type=\"file\" name=\"resume\" onChange={handleFileChange} accept=\".pdf\"/>\n// //           </div>\n// //           <button type=\"submit\" className=\"submit-btn\">Generate</button>\n// //         </form>\n// //         <section className=\"questions-and-answers\">\n// //           {questionsAndAnswers.map((qa, index) => (\n// //             <article key={index} className=\"qa-item\">\n// //               <h3 className=\"question\">Q: {qa.question}</h3>\n// //               <p className=\"answer\">A: {qa.answer}</p>\n// //             </article>\n// //           ))}\n// //         </section>\n// //       </main>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [questions, setQuestions] = useState([]);\n//   const [selectedQuestion, setSelectedQuestion] = useState('');\n//   const [generatedAnswer, setGeneratedAnswer] = useState('');\n\n//   const handleJobPostingChange = (e) => {\n//     setJobPosting(e.target.files[0]);\n//   };\n\n//   const handleResumeChange = (e) => {\n//     const reader = new FileReader();\n//     reader.onload = (e) => {\n//       setResume(e.target.result);\n//     };\n//     reader.readAsText(e.target.files[0]);\n//   };\n\n//   const handleQuestionSelect = (e) => {\n//     setSelectedQuestion(e.target.value);\n//   };\n\n//   const handleSubmitQuestions = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('job_posting', jobPosting);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestions(data.questions);\n//     } catch (error) {\n//       console.error('Error uploading job posting:', error);\n//     }\n//   };\n\n//   const handleGenerateAnswer = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/generate_answer', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           question: selectedQuestion,\n//           resume_text: resume,\n//         }),\n//       });\n//       const data = await response.json();\n//       setGeneratedAnswer(data.answer);\n//     } catch (error) {\n//       console.error('Error generating answer:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header>\n//         <h1>Interview Preparation Helper</h1>\n//       </header>\n//       <main>\n//         <section className=\"file-upload-section\">\n//           <form className=\"upload-form\">\n//             <div className=\"file-input\">\n//               <label htmlFor=\"jobPosting\">Job Posting PDF:</label>\n//               <input type=\"file\" name=\"jobPosting\" onChange={handleJobPostingChange} accept=\".pdf\" />\n//             </div>\n//             <div className=\"file-input\">\n//               <label htmlFor=\"resume\">Resume PDF:</label>\n//               <input type=\"file\" name=\"resume\" onChange={handleResumeChange} accept=\".pdf\" />\n//             </div>\n//             <button type=\"button\" onClick={handleSubmitQuestions} className=\"submit-btn\">Upload Job Posting and Generate Questions</button>\n//           </form>\n//         </section>\n//         <section className=\"questions-section\">\n//           <h2>Select a Question</h2>\n//           <select value={selectedQuestion} onChange={handleQuestionSelect}>\n//             <option value=\"\">Select a question...</option>\n//             {questions.map((question, index) => (\n//               <option key={index} value={question}>\n//                 {question}\n//               </option>\n//             ))}\n//           </select>\n//           <button onClick={handleGenerateAnswer} className=\"generate-answer-btn\">Generate Answer</button>\n//         </section>\n//         {generatedAnswer && (\n//           <section className=\"answer-section\">\n//             <h3>Generated Answer</h3>\n//             <p>{generatedAnswer}</p>\n//           </section>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import './App.css';\n\n// // function App() {\n// //   const [jobPosting, setJobPosting] = useState(null);\n// //   const [resume, setResume] = useState(null);\n// //   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n// //   const handleFileChange = (e) => {\n// //     const { name, files } = e.target;\n// //     if (name === 'jobPosting') {\n// //       setJobPosting(files[0]);\n// //     } else if (name === 'resume') {\n// //       setResume(files[0]);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const formData = new FormData();\n// //     formData.append('job_posting', jobPosting);\n// //     formData.append('resume', resume);\n\n// //     try {\n// //       const response = await fetch('http://127.0.0.1:5000/upload', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n// //       const data = await response.json();\n// //       setQuestionsAndAnswers(data.questionsAndAnswers);\n// //     } catch (error) {\n// //       console.error('Error uploading files:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <h1>Interview Preparation Helper</h1>\n// //       <form onSubmit={handleSubmit}>\n// //         <div>\n// //           <label htmlFor=\"jobPosting\">Upload Job Posting PDF:</label>\n// //           <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} />\n// //         </div>\n// //         <div>\n// //           <label htmlFor=\"resume\">Upload Resume PDF:</label>\n// //           <input type=\"file\" name=\"resume\" onChange={handleFileChange} />\n// //         </div>\n// //         <button type=\"submit\">Generate Questions and Answers</button>\n// //       </form>\n// //       <div className=\"questions-and-answers\">\n// //         {questionsAndAnswers.map((qa, index) => (\n// //           <div key={index} className=\"qa-item\">\n// //             <div className=\"question\">{qa.question}</div>\n// //             <div className=\"answer\">{qa.answer}</div>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// // import React, { useState } from 'react';\n// // import './App.css';\n\n// // function App() {\n// //   const [jobPosting, setJobPosting] = useState(null);\n// //   const [resume, setResume] = useState(null);\n// //   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n// //   const handleFileChange = (e) => {\n// //     const file = e.target.files[0];\n// //     e.target.name === 'jobPosting' ? setJobPosting(file) : setResume(file);\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const formData = new FormData();\n// //     formData.append('job_posting', jobPosting);\n// //     formData.append('resume', resume);\n\n// //     try {\n// //       const response = await fetch('http://127.0.0.1:5000/upload', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n// //       const data = await response.json();\n// //       setQuestionsAndAnswers(data.questionsAndAnswers);\n// //     } catch (error) {\n// //       console.error('Error uploading files:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <header>\n// //         <h1>Interview Preparation Helper</h1>\n// //       </header>\n// //       <main>\n// //         <form onSubmit={handleSubmit} className=\"upload-form\">\n// //           <div className=\"file-input\">\n// //             <label htmlFor=\"jobPosting\">Job Posting PDF:</label>\n// //             <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} accept=\".pdf\"/>\n// //           </div>\n// //           <div className=\"file-input\">\n// //             <label htmlFor=\"resume\">Resume PDF:</label>\n// //             <input type=\"file\" name=\"resume\" onChange={handleFileChange} accept=\".pdf\"/>\n// //           </div>\n// //           <button type=\"submit\" className=\"submit-btn\">Generate</button>\n// //         </form>\n// //         <section className=\"questions-and-answers\">\n// //           {questionsAndAnswers.map((qa, index) => (\n// //             <article key={index} className=\"qa-item\">\n// //               <h3 className=\"question\">Q: {qa.question}</h3>\n// //               <p className=\"answer\">A: {qa.answer}</p>\n// //             </article>\n// //           ))}\n// //         </section>\n// //       </main>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [questions, setQuestions] = useState([]);\n//   const [selectedQuestion, setSelectedQuestion] = useState('');\n//   const [generatedAnswer, setGeneratedAnswer] = useState('');\n\n//   const handleJobPostingChange = (e) => {\n//     setJobPosting(e.target.files[0]);\n//   };\n\n//   const handleResumeChange = (e) => {\n//     const reader = new FileReader();\n//     reader.onload = (e) => {\n//       setResume(e.target.result);\n//     };\n//     reader.readAsText(e.target.files[0]);\n//   };\n\n//   const handleQuestionSelect = (e) => {\n//     setSelectedQuestion(e.target.value);\n//   };\n\n//   const handleSubmitQuestions = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('job_posting', jobPosting);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestions(data.questions);\n//     } catch (error) {\n//       console.error('Error uploading job posting:', error);\n//     }\n//   };\n\n//   const handleGenerateAnswer = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/generate_answer', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           question: selectedQuestion,\n//           resume_text: resume,\n//         }),\n//       });\n//       const data = await response.json();\n//       setGeneratedAnswer(data.answer);\n//     } catch (error) {\n//       console.error('Error generating answer:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header>\n//         <h1>Interview Preparation Helper</h1>\n//       </header>\n//       <main>\n//         <section className=\"file-upload-section\">\n//           <form className=\"upload-form\">\n//             <div className=\"file-input\">\n//               <label htmlFor=\"jobPosting\">Job Posting PDF:</label>\n//               <input type=\"file\" name=\"jobPosting\" onChange={handleJobPostingChange} accept=\".pdf\" />\n//             </div>\n//             <div className=\"file-input\">\n//               <label htmlFor=\"resume\">Resume PDF:</label>\n//               <input type=\"file\" name=\"resume\" onChange={handleResumeChange} accept=\".pdf\" />\n//             </div>\n//             <button type=\"button\" onClick={handleSubmitQuestions} className=\"submit-btn\">Upload Job Posting and Generate Questions</button>\n//           </form>\n//         </section>\n//         <section className=\"questions-section\">\n//           <h2>Select a Question</h2>\n//           <select value={selectedQuestion} onChange={handleQuestionSelect}>\n//             <option value=\"\">Select a question...</option>\n//             {questions.map((question, index) => (\n//               <option key={index} value={question}>\n//                 {question}\n//               </option>\n//             ))}\n//           </select>\n//           <button onClick={handleGenerateAnswer} className=\"generate-answer-btn\">Generate Answer</button>\n//         </section>\n//         {generatedAnswer && (\n//           <section className=\"answer-section\">\n//             <h3>Generated Answer</h3>\n//             <p>{generatedAnswer}</p>\n//           </section>\n//         )}\n//       </main>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}