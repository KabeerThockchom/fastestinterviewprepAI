{"ast":null,"code":"var _jsxFileName = \"/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     if (name === 'jobPosting') {\n//       setJobPosting(files[0]);\n//     } else if (name === 'resume') {\n//       setResume(files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('job_posting', jobPosting);\n//     formData.append('resume', resume);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestionsAndAnswers(data.questionsAndAnswers);\n//     } catch (error) {\n//       console.error('Error uploading files:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Interview Preparation Helper</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"jobPosting\">Upload Job Posting PDF:</label>\n//           <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} />\n//         </div>\n//         <div>\n//           <label htmlFor=\"resume\">Upload Resume PDF:</label>\n//           <input type=\"file\" name=\"resume\" onChange={handleFileChange} />\n//         </div>\n//         <button type=\"submit\">Generate Questions and Answers</button>\n//       </form>\n//       <div className=\"questions-and-answers\">\n//         {questionsAndAnswers.map((qa, index) => (\n//           <div key={index} className=\"qa-item\">\n//             <div className=\"question\">{qa.question}</div>\n//             <div className=\"answer\">{qa.answer}</div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobPosting, setJobPosting] = useState(null);\n  const [resume, setResume] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    e.target.name === 'jobPosting' ? setJobPosting(file) : setResume(file);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('job_posting', jobPosting);\n    formData.append('resume', resume);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setQuestionsAndAnswers(data.questionsAndAnswers);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Interview Preparation Helper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"upload-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"jobPosting\",\n            children: \"Job Posting PDF:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"jobPosting\",\n            onChange: handleFileChange,\n            accept: \".pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"resume\",\n            children: \"Resume PDF:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"resume\",\n            onChange: handleFileChange,\n            accept: \".pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"questions-and-answers\",\n        children: questionsAndAnswers.map((qa, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"qa-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"question\",\n            children: [\"Q: \", qa.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"answer\",\n            children: [\"A: \", qa.answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r/MO4WVz3kRQU4NyivWPQEi2O3k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","jobPosting","setJobPosting","resume","setResume","questionsAndAnswers","setQuestionsAndAnswers","handleFileChange","e","file","target","files","name","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","accept","map","qa","index","question","answer","_c","$RefreshReg$"],"sources":["/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     if (name === 'jobPosting') {\n//       setJobPosting(files[0]);\n//     } else if (name === 'resume') {\n//       setResume(files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('job_posting', jobPosting);\n//     formData.append('resume', resume);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestionsAndAnswers(data.questionsAndAnswers);\n//     } catch (error) {\n//       console.error('Error uploading files:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Interview Preparation Helper</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"jobPosting\">Upload Job Posting PDF:</label>\n//           <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} />\n//         </div>\n//         <div>\n//           <label htmlFor=\"resume\">Upload Resume PDF:</label>\n//           <input type=\"file\" name=\"resume\" onChange={handleFileChange} />\n//         </div>\n//         <button type=\"submit\">Generate Questions and Answers</button>\n//       </form>\n//       <div className=\"questions-and-answers\">\n//         {questionsAndAnswers.map((qa, index) => (\n//           <div key={index} className=\"qa-item\">\n//             <div className=\"question\">{qa.question}</div>\n//             <div className=\"answer\">{qa.answer}</div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [jobPosting, setJobPosting] = useState(null);\n  const [resume, setResume] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    e.target.name === 'jobPosting' ? setJobPosting(file) : setResume(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('job_posting', jobPosting);\n    formData.append('resume', resume);\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      setQuestionsAndAnswers(data.questionsAndAnswers);\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Interview Preparation Helper</h1>\n      </header>\n      <main>\n        <form onSubmit={handleSubmit} className=\"upload-form\">\n          <div className=\"file-input\">\n            <label htmlFor=\"jobPosting\">Job Posting PDF:</label>\n            <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} accept=\".pdf\"/>\n          </div>\n          <div className=\"file-input\">\n            <label htmlFor=\"resume\">Resume PDF:</label>\n            <input type=\"file\" name=\"resume\" onChange={handleFileChange} accept=\".pdf\"/>\n          </div>\n          <button type=\"submit\" className=\"submit-btn\">Generate</button>\n        </form>\n        <section className=\"questions-and-answers\">\n          {questionsAndAnswers.map((qa, index) => (\n            <article key={index} className=\"qa-item\">\n              <h3 className=\"question\">Q: {qa.question}</h3>\n              <p className=\"answer\">A: {qa.answer}</p>\n            </article>\n          ))}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}