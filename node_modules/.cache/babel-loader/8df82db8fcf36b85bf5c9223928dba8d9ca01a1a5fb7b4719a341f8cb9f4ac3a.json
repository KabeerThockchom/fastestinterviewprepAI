{"ast":null,"code":"var _jsxFileName = \"/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const JobInterviewHelper = () => {\n//   const [jobPostingFile, setJobPostingFile] = useState(null);\n//   const [resumeFile, setResumeFile] = useState(null);\n//   const [interviewQuestions, setInterviewQuestions] = useState([]);\n//   const [generatingAnswers, setGeneratingAnswers] = useState(false);\n//   const [answers, setAnswers] = useState([]);\n\n//   const handleJobPostingUpload = (event) => {\n//     setJobPostingFile(event.target.files[0]);\n//   };\n\n//   const handleResumeUpload = (event) => {\n//     setResumeFile(event.target.files[0]);\n//   };\n\n//   const handleGenerateQuestions = async () => {\n//     if (jobPostingFile) {\n//       const formData = new FormData();\n//       formData.append('jobPosting', jobPostingFile);\n\n//       try {\n//         const response = await axios.post('/api/generate-questions', formData);\n//         setInterviewQuestions(response.data.questions);\n//       } catch (error) {\n//         console.error('Error generating interview questions:', error);\n//       }\n//     }\n//   };\n\n//   const handleGenerateAnswers = async () => {\n//     if (resumeFile) {\n//       setGeneratingAnswers(true);\n//       const formData = new FormData();\n//       formData.append('resume', resumeFile);\n//       formData.append('questions', JSON.stringify(interviewQuestions));\n\n//       try {\n//         const response = await axios.post('/api/generate-answers', formData);\n//         setAnswers(response.data.answers);\n//       } catch (error) {\n//         console.error('Error generating answers:', error);\n//       }\n//       setGeneratingAnswers(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Job Interview Helper</h1>\n//       <div>\n//         <h2>Upload Job Posting</h2>\n//         <input type=\"file\" accept=\".pdf\" onChange={handleJobPostingUpload} />\n//         <button onClick={handleGenerateQuestions} disabled={!jobPostingFile}>\n//           Generate Interview Questions\n//         </button>\n//       </div>\n//       <div>\n//         <h2>Upload Resume</h2>\n//         <input type=\"file\" accept=\".pdf\" onChange={handleResumeUpload} />\n//         <button onClick={handleGenerateAnswers} disabled={!resumeFile || generatingAnswers}>\n//           Generate Answers\n//         </button>\n//       </div>\n//       <div>\n//         <h2>Generated Interview Questions</h2>\n//         <ul>\n//           {interviewQuestions.map((question, index) => (\n//             <li key={index}>{question}</li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div>\n//         <h2>Generated Answers</h2>\n//         {generatingAnswers ? (\n//           <p>Generating answers...</p>\n//         ) : (\n//           <ul>\n//             {answers.map((answer, index) => (\n//               <li key={index}>\n//                 <p><strong>Question:</strong> {interviewQuestions[index]}</p>\n//                 <p><strong>Answer:</strong> {answer}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default JobInterviewHelper;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jobPostingFile, setJobPostingFile] = useState(null);\n  const [resumeFile, setResumeFile] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const handleJobPostingUpload = event => {\n    setJobPostingFile(event.target.files[0]);\n  };\n  const handleResumeUpload = event => {\n    setResumeFile(event.target.files[0]);\n  };\n  const generateQuestions = async () => {\n    const formData = new FormData();\n    formData.append('jobPosting', jobPostingFile);\n    try {\n      const response = await axios.post('/api/generate-questions', formData);\n      setQuestions(response.data.questions);\n    } catch (error) {\n      console.error('Error generating questions:', error);\n    }\n  };\n  const generateAnswers = async () => {\n    const formData = new FormData();\n    formData.append('resume', resumeFile);\n    formData.append('questions', JSON.stringify(questions));\n    try {\n      const response = await axios.post('/api/generate-answers', formData);\n      setAnswers(response.data.answers);\n    } catch (error) {\n      console.error('Error generating answers:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interview Question and Answer Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Job Posting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf\",\n        onChange: handleJobPostingUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateQuestions,\n        children: \"Generate Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf\",\n        onChange: handleResumeUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateAnswers,\n        children: \"Generate Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SpEHGbBgiyH6dEal3Wz18U8iS9Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","jobPostingFile","setJobPostingFile","resumeFile","setResumeFile","questions","setQuestions","answers","setAnswers","handleJobPostingUpload","event","target","files","handleResumeUpload","generateQuestions","formData","FormData","append","response","post","data","error","console","generateAnswers","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","map","question","index","answer","_c","$RefreshReg$"],"sources":["/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const JobInterviewHelper = () => {\n//   const [jobPostingFile, setJobPostingFile] = useState(null);\n//   const [resumeFile, setResumeFile] = useState(null);\n//   const [interviewQuestions, setInterviewQuestions] = useState([]);\n//   const [generatingAnswers, setGeneratingAnswers] = useState(false);\n//   const [answers, setAnswers] = useState([]);\n\n//   const handleJobPostingUpload = (event) => {\n//     setJobPostingFile(event.target.files[0]);\n//   };\n\n//   const handleResumeUpload = (event) => {\n//     setResumeFile(event.target.files[0]);\n//   };\n\n//   const handleGenerateQuestions = async () => {\n//     if (jobPostingFile) {\n//       const formData = new FormData();\n//       formData.append('jobPosting', jobPostingFile);\n\n//       try {\n//         const response = await axios.post('/api/generate-questions', formData);\n//         setInterviewQuestions(response.data.questions);\n//       } catch (error) {\n//         console.error('Error generating interview questions:', error);\n//       }\n//     }\n//   };\n\n//   const handleGenerateAnswers = async () => {\n//     if (resumeFile) {\n//       setGeneratingAnswers(true);\n//       const formData = new FormData();\n//       formData.append('resume', resumeFile);\n//       formData.append('questions', JSON.stringify(interviewQuestions));\n\n//       try {\n//         const response = await axios.post('/api/generate-answers', formData);\n//         setAnswers(response.data.answers);\n//       } catch (error) {\n//         console.error('Error generating answers:', error);\n//       }\n//       setGeneratingAnswers(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Job Interview Helper</h1>\n//       <div>\n//         <h2>Upload Job Posting</h2>\n//         <input type=\"file\" accept=\".pdf\" onChange={handleJobPostingUpload} />\n//         <button onClick={handleGenerateQuestions} disabled={!jobPostingFile}>\n//           Generate Interview Questions\n//         </button>\n//       </div>\n//       <div>\n//         <h2>Upload Resume</h2>\n//         <input type=\"file\" accept=\".pdf\" onChange={handleResumeUpload} />\n//         <button onClick={handleGenerateAnswers} disabled={!resumeFile || generatingAnswers}>\n//           Generate Answers\n//         </button>\n//       </div>\n//       <div>\n//         <h2>Generated Interview Questions</h2>\n//         <ul>\n//           {interviewQuestions.map((question, index) => (\n//             <li key={index}>{question}</li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div>\n//         <h2>Generated Answers</h2>\n//         {generatingAnswers ? (\n//           <p>Generating answers...</p>\n//         ) : (\n//           <ul>\n//             {answers.map((answer, index) => (\n//               <li key={index}>\n//                 <p><strong>Question:</strong> {interviewQuestions[index]}</p>\n//                 <p><strong>Answer:</strong> {answer}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default JobInterviewHelper;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [jobPostingFile, setJobPostingFile] = useState(null);\n  const [resumeFile, setResumeFile] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n\n  const handleJobPostingUpload = (event) => {\n    setJobPostingFile(event.target.files[0]);\n  };\n\n  const handleResumeUpload = (event) => {\n    setResumeFile(event.target.files[0]);\n  };\n\n  const generateQuestions = async () => {\n    const formData = new FormData();\n    formData.append('jobPosting', jobPostingFile);\n\n    try {\n      const response = await axios.post('/api/generate-questions', formData);\n      setQuestions(response.data.questions);\n    } catch (error) {\n      console.error('Error generating questions:', error);\n    }\n  };\n\n  const generateAnswers = async () => {\n    const formData = new FormData();\n    formData.append('resume', resumeFile);\n    formData.append('questions', JSON.stringify(questions));\n\n    try {\n      const response = await axios.post('/api/generate-answers', formData);\n      setAnswers(response.data.answers);\n    } catch (error) {\n      console.error('Error generating answers:', error);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Interview Question and Answer Generator</h1>\n      <div>\n        <h2>Upload Job Posting</h2>\n        <input type=\"file\" accept=\".pdf\" onChange={handleJobPostingUpload} />\n        <button onClick={generateQuestions}>Generate Questions</button>\n      </div>\n      <div>\n        <h2>Upload Resume</h2>\n        <input type=\"file\" accept=\".pdf\" onChange={handleResumeUpload} />\n        <button onClick={generateAnswers}>Generate Answers</button>\n      </div>\n      <div>\n        <h2>Generated Questions</h2>\n        <ul>\n          {questions.map((question, index) => (\n            <li key={index}>{question}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h2>Generated Answers</h2>\n        <ul>\n          {answers.map((answer, index) => (\n            <li key={index}>{answer}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}