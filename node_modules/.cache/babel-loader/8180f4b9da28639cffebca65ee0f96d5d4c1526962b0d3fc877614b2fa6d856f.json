{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import './App.css';\n\n// // function App() {\n// //   const [jobPosting, setJobPosting] = useState(null);\n// //   const [resume, setResume] = useState(null);\n// //   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n// //   const handleFileChange = (e) => {\n// //     const { name, files } = e.target;\n// //     if (name === 'jobPosting') {\n// //       setJobPosting(files[0]);\n// //     } else if (name === 'resume') {\n// //       setResume(files[0]);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const formData = new FormData();\n// //     formData.append('job_posting', jobPosting);\n// //     formData.append('resume', resume);\n\n// //     try {\n// //       const response = await fetch('http://127.0.0.1:5000/upload', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n// //       const data = await response.json();\n// //       setQuestionsAndAnswers(data.questionsAndAnswers);\n// //     } catch (error) {\n// //       console.error('Error uploading files:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <h1>Interview Preparation Helper</h1>\n// //       <form onSubmit={handleSubmit}>\n// //         <div>\n// //           <label htmlFor=\"jobPosting\">Upload Job Posting PDF:</label>\n// //           <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} />\n// //         </div>\n// //         <div>\n// //           <label htmlFor=\"resume\">Upload Resume PDF:</label>\n// //           <input type=\"file\" name=\"resume\" onChange={handleFileChange} />\n// //         </div>\n// //         <button type=\"submit\">Generate Questions and Answers</button>\n// //       </form>\n// //       <div className=\"questions-and-answers\">\n// //         {questionsAndAnswers.map((qa, index) => (\n// //           <div key={index} className=\"qa-item\">\n// //             <div className=\"question\">{qa.question}</div>\n// //             <div className=\"answer\">{qa.answer}</div>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     if (name === 'jobPosting') {\n//       setJobPosting(files[0]);\n//     } else if (name === 'resume') {\n//       setResume(files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n\n//     const formData = new FormData();\n//     formData.append('job_posting', jobPosting);\n//     formData.append('resume', resume);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestionsAndAnswers(data.questionsAndAnswers);\n//     } catch (error) {\n//       console.error('Error uploading files:', error);\n//     }\n\n//     setIsLoading(false);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header>\n//         <h1>Interview Preparation Helper</h1>\n//       </header>\n//       <main>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"jobPosting\">Upload Job Posting PDF:</label>\n//             <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"resume\">Upload Resume PDF:</label>\n//             <input type=\"file\" name=\"resume\" onChange={handleFileChange} />\n//           </div>\n//           <button type=\"submit\" disabled={isLoading}>\n//             {isLoading ? 'Generating...' : 'Generate Questions and Answers'}\n//           </button>\n//         </form>\n//         <div className=\"questions-and-answers\">\n//           {questionsAndAnswers.map((qa, index) => (\n//             <div key={index} className=\"qa-item\">\n//               <div className=\"question\">{qa.question}</div>\n//               <div className=\"answer\">{qa.answer}</div>\n//             </div>\n//           ))}\n//         </div>\n//       </main>\n//       <footer>\n//         <p>&copy; 2023 Interview Preparation Helper. All rights reserved.</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/kabeerthockchom/interview helper/job-interview-helper/src/App.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import './App.css';\n\n// // function App() {\n// //   const [jobPosting, setJobPosting] = useState(null);\n// //   const [resume, setResume] = useState(null);\n// //   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n\n// //   const handleFileChange = (e) => {\n// //     const { name, files } = e.target;\n// //     if (name === 'jobPosting') {\n// //       setJobPosting(files[0]);\n// //     } else if (name === 'resume') {\n// //       setResume(files[0]);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const formData = new FormData();\n// //     formData.append('job_posting', jobPosting);\n// //     formData.append('resume', resume);\n\n// //     try {\n// //       const response = await fetch('http://127.0.0.1:5000/upload', {\n// //         method: 'POST',\n// //         body: formData,\n// //       });\n// //       const data = await response.json();\n// //       setQuestionsAndAnswers(data.questionsAndAnswers);\n// //     } catch (error) {\n// //       console.error('Error uploading files:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <h1>Interview Preparation Helper</h1>\n// //       <form onSubmit={handleSubmit}>\n// //         <div>\n// //           <label htmlFor=\"jobPosting\">Upload Job Posting PDF:</label>\n// //           <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} />\n// //         </div>\n// //         <div>\n// //           <label htmlFor=\"resume\">Upload Resume PDF:</label>\n// //           <input type=\"file\" name=\"resume\" onChange={handleFileChange} />\n// //         </div>\n// //         <button type=\"submit\">Generate Questions and Answers</button>\n// //       </form>\n// //       <div className=\"questions-and-answers\">\n// //         {questionsAndAnswers.map((qa, index) => (\n// //           <div key={index} className=\"qa-item\">\n// //             <div className=\"question\">{qa.question}</div>\n// //             <div className=\"answer\">{qa.answer}</div>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [jobPosting, setJobPosting] = useState(null);\n//   const [resume, setResume] = useState(null);\n//   const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     if (name === 'jobPosting') {\n//       setJobPosting(files[0]);\n//     } else if (name === 'resume') {\n//       setResume(files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n\n//     const formData = new FormData();\n//     formData.append('job_posting', jobPosting);\n//     formData.append('resume', resume);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/upload', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       const data = await response.json();\n//       setQuestionsAndAnswers(data.questionsAndAnswers);\n//     } catch (error) {\n//       console.error('Error uploading files:', error);\n//     }\n\n//     setIsLoading(false);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header>\n//         <h1>Interview Preparation Helper</h1>\n//       </header>\n//       <main>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"jobPosting\">Upload Job Posting PDF:</label>\n//             <input type=\"file\" name=\"jobPosting\" onChange={handleFileChange} />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"resume\">Upload Resume PDF:</label>\n//             <input type=\"file\" name=\"resume\" onChange={handleFileChange} />\n//           </div>\n//           <button type=\"submit\" disabled={isLoading}>\n//             {isLoading ? 'Generating...' : 'Generate Questions and Answers'}\n//           </button>\n//         </form>\n//         <div className=\"questions-and-answers\">\n//           {questionsAndAnswers.map((qa, index) => (\n//             <div key={index} className=\"qa-item\">\n//               <div className=\"question\">{qa.question}</div>\n//               <div className=\"answer\">{qa.answer}</div>\n//             </div>\n//           ))}\n//         </div>\n//       </main>\n//       <footer>\n//         <p>&copy; 2023 Interview Preparation Helper. All rights reserved.</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}